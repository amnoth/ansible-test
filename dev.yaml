---
- name: "Development Station"
  hosts: localhost
  connection: local
  tasks:
    # unattended upgrades
    - name: Install Unattended Upgrades
      ansible.builtin.apt:
        state: present
        name:
          - unattended-upgrades
    - name: Enable Unattended Upgrades Service
      ansible.builtin.systemd:
        name: unattended-upgrades.service
        state: started
        enabled: true

    # shell install
    - name: Install zsh
      ansible.builtin.apt:
        name: zsh
        state: present
      become: true
      become_user: root
      become_method: ansible.builtin.sudo
    - name: Install tmux
      ansible.builtin.apt:
        name: tmux
        state: present
      become: true
      become_user: root
      become_method: ansible.builtin.sudo
    # shell config
    - name: Configure shell
      become: true
      become_user: amnoth
      become_method: ansible.builtin.sudo
      vars:
        zshrc_url: https://raw.githubusercontent.com/amnoth/dotfiles/main/.zshrc
        tmux_conf_url: https://raw.githubusercontent.com/amnoth/dotfiles/main/tmux.conf
        p10k_zsh_url: https://raw.githubusercontent.com/amnoth/dotfiles/main/.p10k.zsh
      block:
        # tmux config
        - name: Install tmux package manager # noqa: latest
          ansible.builtin.git:
            repo: https://github.com/tmux-plugins/tpm
            dest: ~/.tmux/plugins/tpm
            version: HEAD
        # make sure ~/.config/tmux/ exists
        - name: Create ~/.config/tmux directory
          ansible.builtin.file:
            path: ~/.config/tmux
            state: directory
            mode: "0755"
        # oh-my-zsh
        - name: Install oh-my-zsh
          ansible.builtin.shell: |
            sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
          args:
            chdir: ~
        - name: Install powerline10k # noqa: latest
          ansible.builtin.git:
            repo: https://github.com/romkatv/powerlevel10k.git
            depth: 1
            version: HEAD
            dest: ~/.oh-my-zsh/custom/themes/powerlevel10k
        # zsh-autosuggestions
        - name: Install zsh-syntax-highlighting # noqa: latest
          ansible.builtin.git:
            repo: https://github.com/zsh-users/zsh-syntax-highlighting.git
            version: HEAD
            dest: ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting
        - name: Install catppuccin zsh-syntax-highlighting
          ansible.builtin.shell: |
            git clone https://github.com/catppuccin/zsh-syntax-highlighting.git
            cd zsh-syntax-highlighting/themes/
            mkdir -p ~/.zsh
            cp -v catppuccin_mocha-zsh-syntax-highlighting.zsh ~/.zsh/
        # kubectl
        - name: Install kubectl
          ansible.builtin.shell: |
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
        - name: Install kubectx
          ansible.builtin.shell: |
            sudo git clone https://github.com/ahmetb/kubectx /opt/kubectx
            sudo ln -s /opt/kubectx/kubectx /usr/local/bin/kubectx
            sudo ln -s /opt/kubectx/kubens /usr/local/bin/kubens
        # helm
        - name: Install helm
          ansible.builtin.shell: |
            curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
        # flux
        - name: Install flux cli
          ansible.builtin.shell: |
            curl -s https://fluxcd.io/install.sh | sudo bash
        # download config files
        - name: "Download ~/.zshrc"
          ansible.builtin.get_url:
            url: "{{ zshrc_url }}"
            dest: ~/.zshrc
            mode: "0644"
        - name: "Download ~/.config/tmux/tmux.conf"
          ansible.builtin.get_url:
            url: "{{ tmux_conf_url }}"
            dest: ~/.config/tmux/tmux.conf
            mode: "0644"
        - name: "Download ~/.p10k.zsh"
          ansible.builtin.get_url:
            url: "{{ p10k_zsh_url }}"
            dest: ~/.p10k.zsh
            mode: "0644"

    # docker
    - name: "Install & configure docker"
      become: true
      become_user: root
      become_method: ansible.builtin.sudo
      block:
        - name: "Update apt cache"
          ansible.builtin.apt:
            update_cache: true
            cache_valid_time: 3600
        - name: "Install dependencies"
          ansible.builtin.apt:
            name: "{{ packages }}"
            state: present
            update_cache: true
          vars:
            packages:
              - ca-certificates
              - curl
              - gnupg
        - name: "Add apt signing key for docker"
          ansible.builtin.apt_key:
            url: https://download.docker.com/linux/ubuntu/gpg
            state: present
        - name: "Add apt repository for stable Docker version"
          ansible.builtin.apt_repository:
            repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
            state: present
        - name: "Install Docker"
          ansible.builtin.apt:
            name: "{{ packages }}"
            state: present
            update_cache: true
          vars:
            packages:
              - docker-ce
              - docker-ce-cli
              - containerd.io
              - docker-buildx-plugin
              - docker-compose-plugin
        - name: "Add users to docker group"
          ansible.builtin.user:
            name: "amnoth"
            append: true
            groups: docker

    - name: Install & configure Neovim
      become: true
      become_user: root
      become_method: ansible.builtin.sudo
      block:
        - name: "Create ~/src directory"
          ansible.builtin.file:
            path: ~/src
            state: directory
            mode: "0755"

        - name: "Neovim - Install prerequisites"
          ansible.builtin.apt:
            name: "{{ item }}"
            state: present
          with_items:
            - ninja-build
            - gettext
            - cmake
            - unzip
            - curl

        - name: Neovim - Build stable release & install from deb package
          ansible.builtin.shell: |
            git clone https://github.com/neovim/neovim
            cd neovim
            git checkout stable
            make CMAKE_BUILD_TYPE=RelWithDebInfo
            cd build
            cpack -G DEB && sudo dpkg -i nvim-linux64.deb
          args:
            chdir: ~/src

        - name: Neovim - Use nvim for vi
          community.general.alternatives:
            name: vi
            path: /usr/bin/nvim
        - name: Neovim - Use nvim for vim
          community.general.alternatives:
            name: vim
            path: /usr/bin/nvim
        - name: Neovim - Use nvim for editor
          community.general.alternatives:
            name: editor
            path: /usr/bin/nvim

    - name: Ansible development tools
      become: true
      become_user: root
      become_method: ansible.builtin.sudo
      block:
        - name: Install pip3
          ansible.builtin.apt:
            name: python3-pip
            state: present
        - name: Install ansible-lint
          ansible.builtin.pip:
            name: ansible-lint
        - name: Add ~/.local/bin to path
          ansible.builtin.copy:
            content: "export PATH=$PATH:{{ local_bin }}"
            dest: "/etc/profile.d/home-local-bin.sh"
            owner: root
            group: root
            mode: "0644"
          vars:
            local_bin: "$HOME/.local/bin"
