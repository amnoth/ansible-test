---
- name: "Development Station"
  hosts: localhost
  connection: local
  tasks:
    # Unattended Upgrades
    - name: Install Unattended Upgrades
      ansible.builtin.apt:
        state: present
        name:
          - unattended-upgrades
    - name: Enable Unattended Upgrades Service
      ansible.builtin.systemd:
        name: unattended-upgrades.service
        state: started
        enabled: true

    # Shell customizations
    - name: "Install zsh"
      apt:
        name: zsh
        state: present
      become: true
      become_user: root
      become_method: sudo
    - name: "Install tmux"
      apt:
        name: tmux
        state: present
      become: true
      become_user: root
      become_method: sudo
    # oh-my-zsh
    - name: "Install & configure oh-my-zsh"
      block:
        # tmux config
        - name: "Install tpm"
          shell: |
            git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
          args:
            chdir: ~
        # make sure ~/.config/tmux/tmux.conf exists
        - name: "Create ~/.config/tmux directory"
          file:
            path: ~/.config/tmux
            state: directory
            mode: 0755
        # create ~/.config/tmux/tmux.conf
        - name: "Create ~/.config/tmux/tmux.conf"
          file:
            path: ~/.config/tmux/tmux.conf
            state: touch
            mode: 0644
        # append to the end of ~/.config/tmux/tmux.conf
        - name: "Append to ~/.config/tmux/tmux.conf"
          lineinfile:
            path: ~/.config/tmux/tmux.conf
            line: |
              # https://github.com/dreamsofcode-io/tmux/blob/main/tmux.conf
              set-option -sa terminal-overrides ",xterm*:Tc"
              set -g mouse on

              unbind C-b
              set -g prefix C-Space
              bind C-Space send-prefix

              # Vim style pane selection
              bind h select-pane -L
              bind j select-pane -D 
              bind k select-pane -U
              bind l select-pane -R

              # Start windows and panes at 1, not 0
              set -g base-index 1
              set -g pane-base-index 1
              set-window-option -g pane-base-index 1
              set-option -g renumber-windows on

              # Use Alt-arrow keys without prefix key to switch panes
              bind -n M-Left select-pane -L
              bind -n M-Right select-pane -R
              bind -n M-Up select-pane -U
              bind -n M-Down select-pane -D

              # Shift arrow to switch windows
              bind -n S-Left  previous-window
              bind -n S-Right next-window

              # Shift Alt vim keys to switch windows
              bind -n M-H previous-window
              bind -n M-L next-window

              set -g @catppuccin_flavour 'mocha'

              set -g @plugin 'tmux-plugins/tpm'
              set -g @plugin 'tmux-plugins/tmux-sensible'
              set -g @plugin 'christoomey/vim-tmux-navigator'
              set -g @plugin 'dreamsofcode-io/catppuccin-tmux'
              set -g @plugin 'tmux-plugins/tmux-yank'

              run '~/.tmux/plugins/tpm/tpm'

              # set vi-mode
              set-window-option -g mode-keys vi
              # keybindings
              bind-key -T copy-mode-vi v send-keys -X begin-selection
              bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
              bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

              bind '"' split-window -v -c "#{pane_current_path}"
              bind % split-window -h -c "#{pane_current_path}"

        # oh-my-zsh
        - name: "Install oh-my-zsh"
          shell: |
            sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
          args:
            chdir: ~
        - name: "Install powerline10k theme"
          shell: |
            git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k
        - name: "Enable powerline10k theme"
          lineinfile:
            path: ~/.zshrc
            regex: "^ZSH_THEME=.*"
            line: 'ZSH_THEME="powerlevel10k/powerlevel10k"'
            state: present
        # append to top of the ~/.zshrc
        - name: "Powerline 10k zsh config"
          lineinfile:
            path: ~/.zshrc
            insertbefore: BOF
            line: |
              # Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
              # Initialization code that may require console input (password prompts, [y/n]
              # confirmations, etc.) must go above this block; everything else may go below.
              if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
                source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
              fi
        - name: "Powerline 10k config"
          lineinfile:
            path: ~/.zshrc
            insertafter: EOF
            line: |
              # To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
              [[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
        - name: "Create .p10k.zsh file"
          file:
            path: ~/.p10k.zsh
            state: touch
            mode: 0644
        - name: "Append to ~/.p10k.zsh"
          lineinfile:
            path: ~/.p10k.zsh
            line: |
              # Generated by Powerlevel10k configuration wizard on 2024-01-26 at 05:51 UTC.
              # Based on romkatv/powerlevel10k/config/p10k-pure.zsh, checksum 35142.
              # Wizard options: nerdfont-complete + powerline, large icons, pure, 2 lines, sparse,
              # instant_prompt=verbose.
              # Type `p10k configure` to generate another config.
              #
              # Config file for Powerlevel10k with the style of Pure (https://github.com/sindresorhus/pure).
              #
              # Differences from Pure:
              #
              #   - Git:
              #     - `@c4d3ec2c` instead of something like `v1.4.0~11` when in detached HEAD state.
              #     - No automatic `git fetch` (the same as in Pure with `PURE_GIT_PULL=0`).
              #
              # Apart from the differences listed above, the replication of Pure prompt is exact. This includes
              # even the questionable parts. For example, just like in Pure, there is no indication of Git status
              # being stale; prompt symbol is the same in command, visual and overwrite vi modes; when prompt
              # doesn't fit on one line, it wraps around with no attempt to shorten it.
              #
              # If you like the general style of Pure but not particularly attached to all its quirks, type
              # `p10k configure` and pick "Lean" style. This will give you slick minimalist prompt while taking
              # advantage of Powerlevel10k features that aren't present in Pure.

              # Temporarily change options.
              'builtin' 'local' '-a' 'p10k_config_opts'
              [[ ! -o 'aliases'         ]] || p10k_config_opts+=('aliases')
              [[ ! -o 'sh_glob'         ]] || p10k_config_opts+=('sh_glob')
              [[ ! -o 'no_brace_expand' ]] || p10k_config_opts+=('no_brace_expand')
              'builtin' 'setopt' 'no_aliases' 'no_sh_glob' 'brace_expand'

              () {
                emulate -L zsh -o extended_glob

                # Unset all configuration options.
                unset -m '(POWERLEVEL9K_*|DEFAULT_USER)~POWERLEVEL9K_GITSTATUS_DIR'

                # Zsh >= 5.1 is required.
                [[ $ZSH_VERSION == (5.<1->*|<6->.*) ]] || return

                # Prompt colors.
                local grey='242'
                local red='1'
                local yellow='3'
                local blue='4'
                local magenta='5'
                local cyan='6'
                local white='7'

                # Left prompt segments.
                typeset -g POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(
                  # =========================[ Line #1 ]=========================
                  context                   # user@host
                  dir                       # current directory
                  vcs                       # git status
                  command_execution_time    # previous command duration
                  # =========================[ Line #2 ]=========================
                  newline                   # \n
                  virtualenv                # python virtual environment
                  prompt_char               # prompt symbol
                )

                # Right prompt segments.
                typeset -g POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(
                  # =========================[ Line #1 ]=========================
                  # command_execution_time  # previous command duration
                  # virtualenv              # python virtual environment
                  # context                 # user@host
                  # time                    # current time
                  # =========================[ Line #2 ]=========================
                  newline                   # \n
                )

                # Basic style options that define the overall prompt look.
                typeset -g POWERLEVEL9K_BACKGROUND=                            # transparent background
                typeset -g POWERLEVEL9K_{LEFT,RIGHT}_{LEFT,RIGHT}_WHITESPACE=  # no surrounding whitespace
                typeset -g POWERLEVEL9K_{LEFT,RIGHT}_SUBSEGMENT_SEPARATOR=' '  # separate segments with a space
                typeset -g POWERLEVEL9K_{LEFT,RIGHT}_SEGMENT_SEPARATOR=        # no end-of-line symbol
                typeset -g POWERLEVEL9K_VISUAL_IDENTIFIER_EXPANSION=           # no segment icons

                # Add an empty line before each prompt except the first. This doesn't emulate the bug
                # in Pure that makes prompt drift down whenever you use the Alt-C binding from fzf or similar.
                typeset -g POWERLEVEL9K_PROMPT_ADD_NEWLINE=true

                # Magenta prompt symbol if the last command succeeded.
                typeset -g POWERLEVEL9K_PROMPT_CHAR_OK_{VIINS,VICMD,VIVIS}_FOREGROUND=$magenta
                # Red prompt symbol if the last command failed.
                typeset -g POWERLEVEL9K_PROMPT_CHAR_ERROR_{VIINS,VICMD,VIVIS}_FOREGROUND=$red
                # Default prompt symbol.
                typeset -g POWERLEVEL9K_PROMPT_CHAR_{OK,ERROR}_VIINS_CONTENT_EXPANSION='❯'
                # Prompt symbol in command vi mode.
                typeset -g POWERLEVEL9K_PROMPT_CHAR_{OK,ERROR}_VICMD_CONTENT_EXPANSION='❮'
                # Prompt symbol in visual vi mode is the same as in command mode.
                typeset -g POWERLEVEL9K_PROMPT_CHAR_{OK,ERROR}_VIVIS_CONTENT_EXPANSION='❮'
                # Prompt symbol in overwrite vi mode is the same as in command mode.
                typeset -g POWERLEVEL9K_PROMPT_CHAR_OVERWRITE_STATE=false

                # Grey Python Virtual Environment.
                typeset -g POWERLEVEL9K_VIRTUALENV_FOREGROUND=$grey
                # Don't show Python version.
                typeset -g POWERLEVEL9K_VIRTUALENV_SHOW_PYTHON_VERSION=false
                typeset -g POWERLEVEL9K_VIRTUALENV_{LEFT,RIGHT}_DELIMITER=

                # Blue current directory.
                typeset -g POWERLEVEL9K_DIR_FOREGROUND=$blue

                # Context format when root: user@host. The first part white, the rest grey.
                typeset -g POWERLEVEL9K_CONTEXT_ROOT_TEMPLATE="%F{$white}%n%f%F{$grey}@%m%f"
                # Context format when not root: user@host. The whole thing grey.
                typeset -g POWERLEVEL9K_CONTEXT_TEMPLATE="%F{$grey}%n@%m%f"
                # Don't show context unless root or in SSH.
                typeset -g POWERLEVEL9K_CONTEXT_{DEFAULT,SUDO}_CONTENT_EXPANSION=

                # Show previous command duration only if it's >= 5s.
                typeset -g POWERLEVEL9K_COMMAND_EXECUTION_TIME_THRESHOLD=5
                # Don't show fractional seconds. Thus, 7s rather than 7.3s.
                typeset -g POWERLEVEL9K_COMMAND_EXECUTION_TIME_PRECISION=0
                # Duration format: 1d 2h 3m 4s.
                typeset -g POWERLEVEL9K_COMMAND_EXECUTION_TIME_FORMAT='d h m s'
                # Yellow previous command duration.
                typeset -g POWERLEVEL9K_COMMAND_EXECUTION_TIME_FOREGROUND=$yellow

                # Grey Git prompt. This makes stale prompts indistinguishable from up-to-date ones.
                typeset -g POWERLEVEL9K_VCS_FOREGROUND=$grey

                # Disable async loading indicator to make directories that aren't Git repositories
                # indistinguishable from large Git repositories without known state.
                typeset -g POWERLEVEL9K_VCS_LOADING_TEXT=

                # Don't wait for Git status even for a millisecond, so that prompt always updates
                # asynchronously when Git state changes.
                typeset -g POWERLEVEL9K_VCS_MAX_SYNC_LATENCY_SECONDS=0

                # Cyan ahead/behind arrows.
                typeset -g POWERLEVEL9K_VCS_{INCOMING,OUTGOING}_CHANGESFORMAT_FOREGROUND=$cyan
                # Don't show remote branch, current tag or stashes.
                typeset -g POWERLEVEL9K_VCS_GIT_HOOKS=(vcs-detect-changes git-untracked git-aheadbehind)
                # Don't show the branch icon.
                typeset -g POWERLEVEL9K_VCS_BRANCH_ICON=
                # When in detached HEAD state, show @commit where branch normally goes.
                typeset -g POWERLEVEL9K_VCS_COMMIT_ICON='@'
                # Don't show staged, unstaged, untracked indicators.
                typeset -g POWERLEVEL9K_VCS_{STAGED,UNSTAGED,UNTRACKED}_ICON=
                # Show '*' when there are staged, unstaged or untracked files.
                typeset -g POWERLEVEL9K_VCS_DIRTY_ICON='*'
                # Show '⇣' if local branch is behind remote.
                typeset -g POWERLEVEL9K_VCS_INCOMING_CHANGES_ICON=':⇣'
                # Show '⇡' if local branch is ahead of remote.
                typeset -g POWERLEVEL9K_VCS_OUTGOING_CHANGES_ICON=':⇡'
                # Don't show the number of commits next to the ahead/behind arrows.
                typeset -g POWERLEVEL9K_VCS_{COMMITS_AHEAD,COMMITS_BEHIND}_MAX_NUM=1
                # Remove space between '⇣' and '⇡' and all trailing spaces.
                typeset -g POWERLEVEL9K_VCS_CONTENT_EXPANSION='${${${P9K_CONTENT/⇣* :⇡/⇣⇡}// }//:/ }'

                # Grey current time.
                typeset -g POWERLEVEL9K_TIME_FOREGROUND=$grey
                # Format for the current time: 09:51:02. See `man 3 strftime`.
                typeset -g POWERLEVEL9K_TIME_FORMAT='%D{%H:%M:%S}'
                # If set to true, time will update when you hit enter. This way prompts for the past
                # commands will contain the start times of their commands rather than the end times of
                # their preceding commands.
                typeset -g POWERLEVEL9K_TIME_UPDATE_ON_COMMAND=false

                # Transient prompt works similarly to the builtin transient_rprompt option. It trims down prompt
                # when accepting a command line. Supported values:
                #
                #   - off:      Don't change prompt when accepting a command line.
                #   - always:   Trim down prompt when accepting a command line.
                #   - same-dir: Trim down prompt when accepting a command line unless this is the first command
                #               typed after changing current working directory.
                typeset -g POWERLEVEL9K_TRANSIENT_PROMPT=off

                # Instant prompt mode.
                #
                #   - off:     Disable instant prompt. Choose this if you've tried instant prompt and found
                #              it incompatible with your zsh configuration files.
                #   - quiet:   Enable instant prompt and don't print warnings when detecting console output
                #              during zsh initialization. Choose this if you've read and understood
                #              https://github.com/romkatv/powerlevel10k/blob/master/README.md#instant-prompt.
                #   - verbose: Enable instant prompt and print a warning when detecting console output during
                #              zsh initialization. Choose this if you've never tried instant prompt, haven't
                #              seen the warning, or if you are unsure what this all means.
                typeset -g POWERLEVEL9K_INSTANT_PROMPT=verbose

                # Hot reload allows you to change POWERLEVEL9K options after Powerlevel10k has been initialized.
                # For example, you can type POWERLEVEL9K_BACKGROUND=red and see your prompt turn red. Hot reload
                # can slow down prompt by 1-2 milliseconds, so it's better to keep it turned off unless you
                # really need it.
                typeset -g POWERLEVEL9K_DISABLE_HOT_RELOAD=true

                # If p10k is already loaded, reload configuration.
                # This works even with POWERLEVEL9K_DISABLE_HOT_RELOAD=true.
                (( ! $+functions[p10k] )) || p10k reload
              }

              # Tell `p10k configure` which file it should overwrite.
              typeset -g POWERLEVEL9K_CONFIG_FILE=${${(%):-%x}:a}

              (( ${#p10k_config_opts} )) && setopt ${p10k_config_opts[@]}
              'builtin' 'unset' 'p10k_config_opts'

        # zsh-autosuggestions
        - name: "Install zsh-syntax-highlighting as a plugin"
          shell: |
            git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
        - name: "Enable zsh-syntax-highlighting plugin"
          lineinfile:
            path: ~/.zshrc
            regex: "^plugins=\\(.*\\)"
            line: "plugins=(git zsh-syntax-highlighting)"
            state: present
        - name: "Install catppuccin zsh-syntax-highlighting"
          shell: |
            git clone https://github.com/catppuccin/zsh-syntax-highlighting.git
            cd zsh-syntax-highlighting/themes/
            mkdir -p ~/.zsh
            cp -v catppuccin_mocha-zsh-syntax-highlighting.zsh ~/.zsh/
        - name: "Enable catppuccin zsh-syntax-highlighting"
          lineinfile:
            path: ~/.zshrc
            insertbefore: "plugins=\\(.*\\)"
            line: "source ~/.zsh/catppuccin_mocha-zsh-syntax-highlighting.zsh"
            state: present
        # kubectl
        - name: "Install kubectl"
          shell: |
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
        - name: "Install kubectx"
          shell: |
            sudo git clone https://github.com/ahmetb/kubectx /opt/kubectx
            sudo ln -s /opt/kubectx/kubectx /usr/local/bin/kubectx
            sudo ln -s /opt/kubectx/kubens /usr/local/bin/kubens
        - name: "Enable kubectl autocompletion"
          lineinfile:
            path: ~/.zshrc
            insertafter: "plugins=\\(.*\\)"
            line: |

              source <(kubectl completion zsh)
              alias k=kubectl
              alias kx=kubectx
              alias kn=kubens
              alias ke='kubectl get events --all-namespaces --sort-by=.metadata.creationTimestamp -w'
              # complete -F __start_kubectl k
              # complete -F __start_kubectl kx
              # complete -F __start_kubectl kn

            state: present
        # helm
        - name: "Install helm"
          shell: |
            curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
        - name: "Enable helm autocompletion"
          lineinfile:
            path: ~/.zshrc
            insertafter: "plugins=\\(.*\\)"
            line: |

              source <(helm completion zsh)
              alias h=helm

            state: present
        # flux
        - name: "Install flux cli"
          shell: |
            curl -s https://fluxcd.io/install.sh | sudo bash
        - name: "Enable flux cli autocompletion"
          lineinfile:
            path: ~/.zshrc
            insertafter: "plugins=\\(.*\\)"
            line: |

              command -v flux >/dev/null && . <(flux completion zsh)

            state: present
      become: true
      become_user: amnoth
      become_method: sudo

    # docker
    - name: "Install & configure docker"
      block:
        - name: "Update apt cache"
          ansible.builtin.apt:
            update_cache: true
            cache_valid_time: 3600
        - name: "Install dependencies"
          ansible.builtin.apt:
            name: "{{ packages }}"
            state: present
            update_cache: true
          vars:
            packages:
              - ca-certificates
              - curl
              - gnupg
        - name: "Add apt signing key for docker"
          ansible.builtin.apt_key:
            url: https://download.docker.com/linux/ubuntu/gpg
            state: present
        - name: "Add apt repository for stable Docker version"
          ansible.builtin.apt_repository:
            repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
            state: present
        - name: "Install Docker"
          ansible.builtin.apt:
            name: "{{ packages }}"
            state: present
            update_cache: true
          vars:
            packages:
              - docker-ce
              - docker-ce-cli
              - containerd.io
              - docker-buildx-plugin
              - docker-compose-plugin
        - name: "Add users to docker group"
          ansible.builtin.user:
            name: "amnoth"
            append: true
            groups: docker
      become: true
      become_user: root
      become_method: sudo

    - name: "Install & configure Neovim"
      block:
        - name: "Create ~/src directory"
          file:
            path: ~/src
            state: directory
            mode: 0755

        - name: "Neovim - Install prerequisites"
          apt:
            name: "{{ item }}"
            state: present
          with_items:
            - ninja-build
            - gettext
            - cmake
            - unzip
            - curl

        - name: "Neovim - Build stable release & install from deb package"
          shell: |
            git clone https://github.com/neovim/neovim
            cd neovim
            git checkout stable
            make CMAKE_BUILD_TYPE=RelWithDebInfo
            cd build
            cpack -G DEB && sudo dpkg -i nvim-linux64.deb
          args:
            chdir: ~/src

        - name: "Neovim - Use nvim for vi"
          alternatives: name=vi path=/usr/bin/nvim
        - name: "Neovim - Use nvim for vim"
          alternatives: name=vim path=/usr/bin/nvim
        - name: "Neovim - Use nvim for editor"
          alternatives: name=editor path=/usr/bin/nvim
      become: true
      become_user: root
      become_method: sudo
